 
uint64_t _mm_set1_epi8_xor(uint64_t message, bool x)
{
  if(x) return (message ^ -1);
  else  return (message ^ 0);
}

__m128i _mm_set1_epi8_xor(__m128i message, bool x)
{
  if(x) return message ^ _mm_set1_epi8(-1);
  else  return message ^ _mm_set1_epi8(0);
}

uint64_t _mm_set1_epi64x_xor(uint64_t message)
{
    return (message ^ -1);
}

__m128i _mm_set1_epi64x_xor(__m128i message)
{
    return (message ^ _mm_set1_epi64x(-1));
}



template<typename T = __m128i>
void populate_lut(const int i, const std::array<T, blocklen> & matrix, T lut[8][256])
{
 for (int k = 0; k < 8; ++k)
 {
    memset(&lut[k][0b00000000], 0, sizeof(lut[k][0b00000000])); // 0x00
    lut[k][0b00000001] = matrix[64*i+8*k+0]; // 0x01
    lut[k][0b00000010] = matrix[64*i+8*k+1]; // 0x02
    lut[k][0b00000011] = lut[k][0b00000010] ^ lut[k][0b00000001]; // 0x03
    lut[k][0b00000100] = matrix[64*i+8*k+2]; // 0x04
    lut[k][0b00000101] = lut[k][0b00000100] ^ lut[k][0b00000001]; // 0x05
    lut[k][0b00000110] = lut[k][0b00000100] ^ lut[k][0b00000010]; // 0x06
    lut[k][0b00000111] = lut[k][0b00000100] ^ lut[k][0b00000011]; // 0x07
    lut[k][0b00001000] = matrix[64*i+8*k+3]; // 0x08
    lut[k][0b00001001] = lut[k][0b00001000] ^ lut[k][0b00000001]; // 0x09
    lut[k][0b00001010] = lut[k][0b00001000] ^ lut[k][0b00000010]; // 0x0a
    lut[k][0b00001011] = lut[k][0b00001000] ^ lut[k][0b00000011]; // 0x0b
    lut[k][0b00001100] = lut[k][0b00001000] ^ lut[k][0b00000100]; // 0x0c
    lut[k][0b00001101] = lut[k][0b00001000] ^ lut[k][0b00000101]; // 0x0d
    lut[k][0b00001110] = lut[k][0b00001000] ^ lut[k][0b00000110]; // 0x0e
    lut[k][0b00001111] = lut[k][0b00001000] ^ lut[k][0b00000111]; // 0x0f
    lut[k][0b00010000] = matrix[64*i+8*k+4]; // 0x10
    lut[k][0b00010001] = lut[k][0b00010000] ^ lut[k][0b00000001]; // 0x11
    lut[k][0b00010010] = lut[k][0b00010000] ^ lut[k][0b00000010]; // 0x12
    lut[k][0b00010011] = lut[k][0b00010000] ^ lut[k][0b00000011]; // 0x13
    lut[k][0b00010100] = lut[k][0b00010000] ^ lut[k][0b00000100]; // 0x14
    lut[k][0b00010101] = lut[k][0b00010000] ^ lut[k][0b00000101]; // 0x15
    lut[k][0b00010110] = lut[k][0b00010000] ^ lut[k][0b00000110]; // 0x16
    lut[k][0b00010111] = lut[k][0b00010000] ^ lut[k][0b00000111]; // 0x17
    lut[k][0b00011000] = lut[k][0b00010000] ^ lut[k][0b00001000]; // 0x18
    lut[k][0b00011001] = lut[k][0b00010000] ^ lut[k][0b00001001]; // 0x19
    lut[k][0b00011010] = lut[k][0b00010000] ^ lut[k][0b00001010]; // 0x1a
    lut[k][0b00011011] = lut[k][0b00010000] ^ lut[k][0b00001011]; // 0x1b
    lut[k][0b00011100] = lut[k][0b00010000] ^ lut[k][0b00001100]; // 0x1c
    lut[k][0b00011101] = lut[k][0b00010000] ^ lut[k][0b00001101]; // 0x1d
    lut[k][0b00011110] = lut[k][0b00010000] ^ lut[k][0b00001110]; // 0x1e
    lut[k][0b00011111] = lut[k][0b00010000] ^ lut[k][0b00001111]; // 0x1f
    lut[k][0b00100000] = matrix[64*i+8*k+5]; // 0x20
    lut[k][0b00100001] = lut[k][0b00100000] ^ lut[k][0b00000001]; // 0x21
    lut[k][0b00100010] = lut[k][0b00100000] ^ lut[k][0b00000010]; // 0x22
    lut[k][0b00100011] = lut[k][0b00100000] ^ lut[k][0b00000011]; // 0x23
    lut[k][0b00100100] = lut[k][0b00100000] ^ lut[k][0b00000100]; // 0x24
    lut[k][0b00100101] = lut[k][0b00100000] ^ lut[k][0b00000101]; // 0x25
    lut[k][0b00100110] = lut[k][0b00100000] ^ lut[k][0b00000110]; // 0x26
    lut[k][0b00100111] = lut[k][0b00100000] ^ lut[k][0b00000111]; // 0x27
    lut[k][0b00101000] = lut[k][0b00100000] ^ lut[k][0b00001000]; // 0x28
    lut[k][0b00101001] = lut[k][0b00100000] ^ lut[k][0b00001001]; // 0x29
    lut[k][0b00101010] = lut[k][0b00100000] ^ lut[k][0b00001010]; // 0x2a
    lut[k][0b00101011] = lut[k][0b00100000] ^ lut[k][0b00001011]; // 0x2b
    lut[k][0b00101100] = lut[k][0b00100000] ^ lut[k][0b00001100]; // 0x2c
    lut[k][0b00101101] = lut[k][0b00100000] ^ lut[k][0b00001101]; // 0x2d
    lut[k][0b00101110] = lut[k][0b00100000] ^ lut[k][0b00001110]; // 0x2e
    lut[k][0b00101111] = lut[k][0b00100000] ^ lut[k][0b00001111]; // 0x2f
    lut[k][0b00110000] = lut[k][0b00100000] ^ lut[k][0b00010000]; // 0x30
    lut[k][0b00110001] = lut[k][0b00100000] ^ lut[k][0b00010001]; // 0x31
    lut[k][0b00110010] = lut[k][0b00100000] ^ lut[k][0b00010010]; // 0x32
    lut[k][0b00110011] = lut[k][0b00100000] ^ lut[k][0b00010011]; // 0x33
    lut[k][0b00110100] = lut[k][0b00100000] ^ lut[k][0b00010100]; // 0x34
    lut[k][0b00110101] = lut[k][0b00100000] ^ lut[k][0b00010101]; // 0x35
    lut[k][0b00110110] = lut[k][0b00100000] ^ lut[k][0b00010110]; // 0x36
    lut[k][0b00110111] = lut[k][0b00100000] ^ lut[k][0b00010111]; // 0x37
    lut[k][0b00111000] = lut[k][0b00100000] ^ lut[k][0b00011000]; // 0x38
    lut[k][0b00111001] = lut[k][0b00100000] ^ lut[k][0b00011001]; // 0x39
    lut[k][0b00111010] = lut[k][0b00100000] ^ lut[k][0b00011010]; // 0x3a
    lut[k][0b00111011] = lut[k][0b00100000] ^ lut[k][0b00011011]; // 0x3b
    lut[k][0b00111100] = lut[k][0b00100000] ^ lut[k][0b00011100]; // 0x3c
    lut[k][0b00111101] = lut[k][0b00100000] ^ lut[k][0b00011101]; // 0x3d
    lut[k][0b00111110] = lut[k][0b00100000] ^ lut[k][0b00011110]; // 0x3e
    lut[k][0b00111111] = lut[k][0b00100000] ^ lut[k][0b00011111]; // 0x3f
    lut[k][0b01000000] = matrix[64*i+8*k+6]; // 0x40
    lut[k][0b01000001] = lut[k][0b01000000] ^ lut[k][0b00000001]; // 0x41
    lut[k][0b01000010] = lut[k][0b01000000] ^ lut[k][0b00000010]; // 0x42
    lut[k][0b01000011] = lut[k][0b01000000] ^ lut[k][0b00000011]; // 0x43
    lut[k][0b01000100] = lut[k][0b01000000] ^ lut[k][0b00000100]; // 0x44
    lut[k][0b01000101] = lut[k][0b01000000] ^ lut[k][0b00000101]; // 0x45
    lut[k][0b01000110] = lut[k][0b01000000] ^ lut[k][0b00000110]; // 0x46
    lut[k][0b01000111] = lut[k][0b01000000] ^ lut[k][0b00000111]; // 0x47
    lut[k][0b01001000] = lut[k][0b01000000] ^ lut[k][0b00001000]; // 0x48
    lut[k][0b01001001] = lut[k][0b01000000] ^ lut[k][0b00001001]; // 0x49
    lut[k][0b01001010] = lut[k][0b01000000] ^ lut[k][0b00001010]; // 0x4a
    lut[k][0b01001011] = lut[k][0b01000000] ^ lut[k][0b00001011]; // 0x4b
    lut[k][0b01001100] = lut[k][0b01000000] ^ lut[k][0b00001100]; // 0x4c
    lut[k][0b01001101] = lut[k][0b01000000] ^ lut[k][0b00001101]; // 0x4d
    lut[k][0b01001110] = lut[k][0b01000000] ^ lut[k][0b00001110]; // 0x4e
    lut[k][0b01001111] = lut[k][0b01000000] ^ lut[k][0b00001111]; // 0x4f
    lut[k][0b01010000] = lut[k][0b01000000] ^ lut[k][0b00010000]; // 0x50
    lut[k][0b01010001] = lut[k][0b01000000] ^ lut[k][0b00010001]; // 0x51
    lut[k][0b01010010] = lut[k][0b01000000] ^ lut[k][0b00010010]; // 0x52
    lut[k][0b01010011] = lut[k][0b01000000] ^ lut[k][0b00010011]; // 0x53
    lut[k][0b01010100] = lut[k][0b01000000] ^ lut[k][0b00010100]; // 0x54
    lut[k][0b01010101] = lut[k][0b01000000] ^ lut[k][0b00010101]; // 0x55
    lut[k][0b01010110] = lut[k][0b01000000] ^ lut[k][0b00010110]; // 0x56
    lut[k][0b01010111] = lut[k][0b01000000] ^ lut[k][0b00010111]; // 0x57
    lut[k][0b01011000] = lut[k][0b01000000] ^ lut[k][0b00011000]; // 0x58
    lut[k][0b01011001] = lut[k][0b01000000] ^ lut[k][0b00011001]; // 0x59
    lut[k][0b01011010] = lut[k][0b01000000] ^ lut[k][0b00011010]; // 0x5a
    lut[k][0b01011011] = lut[k][0b01000000] ^ lut[k][0b00011011]; // 0x5b
    lut[k][0b01011100] = lut[k][0b01000000] ^ lut[k][0b00011100]; // 0x5c
    lut[k][0b01011101] = lut[k][0b01000000] ^ lut[k][0b00011101]; // 0x5d
    lut[k][0b01011110] = lut[k][0b01000000] ^ lut[k][0b00011110]; // 0x5e
    lut[k][0b01011111] = lut[k][0b01000000] ^ lut[k][0b00011111]; // 0x5f
    lut[k][0b01100000] = lut[k][0b01000000] ^ lut[k][0b00100000]; // 0x60
    lut[k][0b01100001] = lut[k][0b01000000] ^ lut[k][0b00100001]; // 0x61
    lut[k][0b01100010] = lut[k][0b01000000] ^ lut[k][0b00100010]; // 0x62
    lut[k][0b01100011] = lut[k][0b01000000] ^ lut[k][0b00100011]; // 0x63
    lut[k][0b01100100] = lut[k][0b01000000] ^ lut[k][0b00100100]; // 0x64
    lut[k][0b01100101] = lut[k][0b01000000] ^ lut[k][0b00100101]; // 0x65
    lut[k][0b01100110] = lut[k][0b01000000] ^ lut[k][0b00100110]; // 0x66
    lut[k][0b01100111] = lut[k][0b01000000] ^ lut[k][0b00100111]; // 0x67
    lut[k][0b01101000] = lut[k][0b01000000] ^ lut[k][0b00101000]; // 0x68
    lut[k][0b01101001] = lut[k][0b01000000] ^ lut[k][0b00101001]; // 0x69
    lut[k][0b01101010] = lut[k][0b01000000] ^ lut[k][0b00101010]; // 0x6a
    lut[k][0b01101011] = lut[k][0b01000000] ^ lut[k][0b00101011]; // 0x6b
    lut[k][0b01101100] = lut[k][0b01000000] ^ lut[k][0b00101100]; // 0x6c
    lut[k][0b01101101] = lut[k][0b01000000] ^ lut[k][0b00101101]; // 0x6d
    lut[k][0b01101110] = lut[k][0b01000000] ^ lut[k][0b00101110]; // 0x6e
    lut[k][0b01101111] = lut[k][0b01000000] ^ lut[k][0b00101111]; // 0x6f
    lut[k][0b01110000] = lut[k][0b01000000] ^ lut[k][0b00110000]; // 0x70
    lut[k][0b01110001] = lut[k][0b01000000] ^ lut[k][0b00110001]; // 0x71
    lut[k][0b01110010] = lut[k][0b01000000] ^ lut[k][0b00110010]; // 0x72
    lut[k][0b01110011] = lut[k][0b01000000] ^ lut[k][0b00110011]; // 0x73
    lut[k][0b01110100] = lut[k][0b01000000] ^ lut[k][0b00110100]; // 0x74
    lut[k][0b01110101] = lut[k][0b01000000] ^ lut[k][0b00110101]; // 0x75
    lut[k][0b01110110] = lut[k][0b01000000] ^ lut[k][0b00110110]; // 0x76
    lut[k][0b01110111] = lut[k][0b01000000] ^ lut[k][0b00110111]; // 0x77
    lut[k][0b01111000] = lut[k][0b01000000] ^ lut[k][0b00111000]; // 0x78
    lut[k][0b01111001] = lut[k][0b01000000] ^ lut[k][0b00111001]; // 0x79
    lut[k][0b01111010] = lut[k][0b01000000] ^ lut[k][0b00111010]; // 0x7a
    lut[k][0b01111011] = lut[k][0b01000000] ^ lut[k][0b00111011]; // 0x7b
    lut[k][0b01111100] = lut[k][0b01000000] ^ lut[k][0b00111100]; // 0x7c
    lut[k][0b01111101] = lut[k][0b01000000] ^ lut[k][0b00111101]; // 0x7d
    lut[k][0b01111110] = lut[k][0b01000000] ^ lut[k][0b00111110]; // 0x7e
    lut[k][0b01111111] = lut[k][0b01000000] ^ lut[k][0b00111111]; // 0x7f
    lut[k][0b10000000] = matrix[64*i+8*k+7]; // 0x80
    lut[k][0b10000001] = lut[k][0b10000000] ^ lut[k][0b00000001]; // 0x81
    lut[k][0b10000010] = lut[k][0b10000000] ^ lut[k][0b00000010]; // 0x82
    lut[k][0b10000011] = lut[k][0b10000000] ^ lut[k][0b00000011]; // 0x83
    lut[k][0b10000100] = lut[k][0b10000000] ^ lut[k][0b00000100]; // 0x84
    lut[k][0b10000101] = lut[k][0b10000000] ^ lut[k][0b00000101]; // 0x85
    lut[k][0b10000110] = lut[k][0b10000000] ^ lut[k][0b00000110]; // 0x86
    lut[k][0b10000111] = lut[k][0b10000000] ^ lut[k][0b00000111]; // 0x87
    lut[k][0b10001000] = lut[k][0b10000000] ^ lut[k][0b00001000]; // 0x88
    lut[k][0b10001001] = lut[k][0b10000000] ^ lut[k][0b00001001]; // 0x89
    lut[k][0b10001010] = lut[k][0b10000000] ^ lut[k][0b00001010]; // 0x8a
    lut[k][0b10001011] = lut[k][0b10000000] ^ lut[k][0b00001011]; // 0x8b
    lut[k][0b10001100] = lut[k][0b10000000] ^ lut[k][0b00001100]; // 0x8c
    lut[k][0b10001101] = lut[k][0b10000000] ^ lut[k][0b00001101]; // 0x8d
    lut[k][0b10001110] = lut[k][0b10000000] ^ lut[k][0b00001110]; // 0x8e
    lut[k][0b10001111] = lut[k][0b10000000] ^ lut[k][0b00001111]; // 0x8f
    lut[k][0b10010000] = lut[k][0b10000000] ^ lut[k][0b00010000]; // 0x90
    lut[k][0b10010001] = lut[k][0b10000000] ^ lut[k][0b00010001]; // 0x91
    lut[k][0b10010010] = lut[k][0b10000000] ^ lut[k][0b00010010]; // 0x92
    lut[k][0b10010011] = lut[k][0b10000000] ^ lut[k][0b00010011]; // 0x93
    lut[k][0b10010100] = lut[k][0b10000000] ^ lut[k][0b00010100]; // 0x94
    lut[k][0b10010101] = lut[k][0b10000000] ^ lut[k][0b00010101]; // 0x95
    lut[k][0b10010110] = lut[k][0b10000000] ^ lut[k][0b00010110]; // 0x96
    lut[k][0b10010111] = lut[k][0b10000000] ^ lut[k][0b00010111]; // 0x97
    lut[k][0b10011000] = lut[k][0b10000000] ^ lut[k][0b00011000]; // 0x98
    lut[k][0b10011001] = lut[k][0b10000000] ^ lut[k][0b00011001]; // 0x99
    lut[k][0b10011010] = lut[k][0b10000000] ^ lut[k][0b00011010]; // 0x9a
    lut[k][0b10011011] = lut[k][0b10000000] ^ lut[k][0b00011011]; // 0x9b
    lut[k][0b10011100] = lut[k][0b10000000] ^ lut[k][0b00011100]; // 0x9c
    lut[k][0b10011101] = lut[k][0b10000000] ^ lut[k][0b00011101]; // 0x9d
    lut[k][0b10011110] = lut[k][0b10000000] ^ lut[k][0b00011110]; // 0x9e
    lut[k][0b10011111] = lut[k][0b10000000] ^ lut[k][0b00011111]; // 0x9f
    lut[k][0b10100000] = lut[k][0b10000000] ^ lut[k][0b00100000]; // 0xa0
    lut[k][0b10100001] = lut[k][0b10000000] ^ lut[k][0b00100001]; // 0xa1
    lut[k][0b10100010] = lut[k][0b10000000] ^ lut[k][0b00100010]; // 0xa2
    lut[k][0b10100011] = lut[k][0b10000000] ^ lut[k][0b00100011]; // 0xa3
    lut[k][0b10100100] = lut[k][0b10000000] ^ lut[k][0b00100100]; // 0xa4
    lut[k][0b10100101] = lut[k][0b10000000] ^ lut[k][0b00100101]; // 0xa5
    lut[k][0b10100110] = lut[k][0b10000000] ^ lut[k][0b00100110]; // 0xa6
    lut[k][0b10100111] = lut[k][0b10000000] ^ lut[k][0b00100111]; // 0xa7
    lut[k][0b10101000] = lut[k][0b10000000] ^ lut[k][0b00101000]; // 0xa8
    lut[k][0b10101001] = lut[k][0b10000000] ^ lut[k][0b00101001]; // 0xa9
    lut[k][0b10101010] = lut[k][0b10000000] ^ lut[k][0b00101010]; // 0xaa
    lut[k][0b10101011] = lut[k][0b10000000] ^ lut[k][0b00101011]; // 0xab
    lut[k][0b10101100] = lut[k][0b10000000] ^ lut[k][0b00101100]; // 0xac
    lut[k][0b10101101] = lut[k][0b10000000] ^ lut[k][0b00101101]; // 0xad
    lut[k][0b10101110] = lut[k][0b10000000] ^ lut[k][0b00101110]; // 0xae
    lut[k][0b10101111] = lut[k][0b10000000] ^ lut[k][0b00101111]; // 0xaf
    lut[k][0b10110000] = lut[k][0b10000000] ^ lut[k][0b00110000]; // 0xb0
    lut[k][0b10110001] = lut[k][0b10000000] ^ lut[k][0b00110001]; // 0xb1
    lut[k][0b10110010] = lut[k][0b10000000] ^ lut[k][0b00110010]; // 0xb2
    lut[k][0b10110011] = lut[k][0b10000000] ^ lut[k][0b00110011]; // 0xb3
    lut[k][0b10110100] = lut[k][0b10000000] ^ lut[k][0b00110100]; // 0xb4
    lut[k][0b10110101] = lut[k][0b10000000] ^ lut[k][0b00110101]; // 0xb5
    lut[k][0b10110110] = lut[k][0b10000000] ^ lut[k][0b00110110]; // 0xb6
    lut[k][0b10110111] = lut[k][0b10000000] ^ lut[k][0b00110111]; // 0xb7
    lut[k][0b10111000] = lut[k][0b10000000] ^ lut[k][0b00111000]; // 0xb8
    lut[k][0b10111001] = lut[k][0b10000000] ^ lut[k][0b00111001]; // 0xb9
    lut[k][0b10111010] = lut[k][0b10000000] ^ lut[k][0b00111010]; // 0xba
    lut[k][0b10111011] = lut[k][0b10000000] ^ lut[k][0b00111011]; // 0xbb
    lut[k][0b10111100] = lut[k][0b10000000] ^ lut[k][0b00111100]; // 0xbc
    lut[k][0b10111101] = lut[k][0b10000000] ^ lut[k][0b00111101]; // 0xbd
    lut[k][0b10111110] = lut[k][0b10000000] ^ lut[k][0b00111110]; // 0xbe
    lut[k][0b10111111] = lut[k][0b10000000] ^ lut[k][0b00111111]; // 0xbf
    lut[k][0b11000000] = lut[k][0b10000000] ^ lut[k][0b01000000]; // 0xc0
    lut[k][0b11000001] = lut[k][0b10000000] ^ lut[k][0b01000001]; // 0xc1
    lut[k][0b11000010] = lut[k][0b10000000] ^ lut[k][0b01000010]; // 0xc2
    lut[k][0b11000011] = lut[k][0b10000000] ^ lut[k][0b01000011]; // 0xc3
    lut[k][0b11000100] = lut[k][0b10000000] ^ lut[k][0b01000100]; // 0xc4
    lut[k][0b11000101] = lut[k][0b10000000] ^ lut[k][0b01000101]; // 0xc5
    lut[k][0b11000110] = lut[k][0b10000000] ^ lut[k][0b01000110]; // 0xc6
    lut[k][0b11000111] = lut[k][0b10000000] ^ lut[k][0b01000111]; // 0xc7
    lut[k][0b11001000] = lut[k][0b10000000] ^ lut[k][0b01001000]; // 0xc8
    lut[k][0b11001001] = lut[k][0b10000000] ^ lut[k][0b01001001]; // 0xc9
    lut[k][0b11001010] = lut[k][0b10000000] ^ lut[k][0b01001010]; // 0xca
    lut[k][0b11001011] = lut[k][0b10000000] ^ lut[k][0b01001011]; // 0xcb
    lut[k][0b11001100] = lut[k][0b10000000] ^ lut[k][0b01001100]; // 0xcc
    lut[k][0b11001101] = lut[k][0b10000000] ^ lut[k][0b01001101]; // 0xcd
    lut[k][0b11001110] = lut[k][0b10000000] ^ lut[k][0b01001110]; // 0xce
    lut[k][0b11001111] = lut[k][0b10000000] ^ lut[k][0b01001111]; // 0xcf
    lut[k][0b11010000] = lut[k][0b10000000] ^ lut[k][0b01010000]; // 0xd0
    lut[k][0b11010001] = lut[k][0b10000000] ^ lut[k][0b01010001]; // 0xd1
    lut[k][0b11010010] = lut[k][0b10000000] ^ lut[k][0b01010010]; // 0xd2
    lut[k][0b11010011] = lut[k][0b10000000] ^ lut[k][0b01010011]; // 0xd3
    lut[k][0b11010100] = lut[k][0b10000000] ^ lut[k][0b01010100]; // 0xd4
    lut[k][0b11010101] = lut[k][0b10000000] ^ lut[k][0b01010101]; // 0xd5
    lut[k][0b11010110] = lut[k][0b10000000] ^ lut[k][0b01010110]; // 0xd6
    lut[k][0b11010111] = lut[k][0b10000000] ^ lut[k][0b01010111]; // 0xd7
    lut[k][0b11011000] = lut[k][0b10000000] ^ lut[k][0b01011000]; // 0xd8
    lut[k][0b11011001] = lut[k][0b10000000] ^ lut[k][0b01011001]; // 0xd9
    lut[k][0b11011010] = lut[k][0b10000000] ^ lut[k][0b01011010]; // 0xda
    lut[k][0b11011011] = lut[k][0b10000000] ^ lut[k][0b01011011]; // 0xdb
    lut[k][0b11011100] = lut[k][0b10000000] ^ lut[k][0b01011100]; // 0xdc
    lut[k][0b11011101] = lut[k][0b10000000] ^ lut[k][0b01011101]; // 0xdd
    lut[k][0b11011110] = lut[k][0b10000000] ^ lut[k][0b01011110]; // 0xde
    lut[k][0b11011111] = lut[k][0b10000000] ^ lut[k][0b01011111]; // 0xdf
    lut[k][0b11100000] = lut[k][0b10000000] ^ lut[k][0b01100000]; // 0xe0
    lut[k][0b11100001] = lut[k][0b10000000] ^ lut[k][0b01100001]; // 0xe1
    lut[k][0b11100010] = lut[k][0b10000000] ^ lut[k][0b01100010]; // 0xe2
    lut[k][0b11100011] = lut[k][0b10000000] ^ lut[k][0b01100011]; // 0xe3
    lut[k][0b11100100] = lut[k][0b10000000] ^ lut[k][0b01100100]; // 0xe4
    lut[k][0b11100101] = lut[k][0b10000000] ^ lut[k][0b01100101]; // 0xe5
    lut[k][0b11100110] = lut[k][0b10000000] ^ lut[k][0b01100110]; // 0xe6
    lut[k][0b11100111] = lut[k][0b10000000] ^ lut[k][0b01100111]; // 0xe7
    lut[k][0b11101000] = lut[k][0b10000000] ^ lut[k][0b01101000]; // 0xe8
    lut[k][0b11101001] = lut[k][0b10000000] ^ lut[k][0b01101001]; // 0xe9
    lut[k][0b11101010] = lut[k][0b10000000] ^ lut[k][0b01101010]; // 0xea
    lut[k][0b11101011] = lut[k][0b10000000] ^ lut[k][0b01101011]; // 0xeb
    lut[k][0b11101100] = lut[k][0b10000000] ^ lut[k][0b01101100]; // 0xec
    lut[k][0b11101101] = lut[k][0b10000000] ^ lut[k][0b01101101]; // 0xed
    lut[k][0b11101110] = lut[k][0b10000000] ^ lut[k][0b01101110]; // 0xee
    lut[k][0b11101111] = lut[k][0b10000000] ^ lut[k][0b01101111]; // 0xef
    lut[k][0b11110000] = lut[k][0b10000000] ^ lut[k][0b01110000]; // 0xf0
    lut[k][0b11110001] = lut[k][0b10000000] ^ lut[k][0b01110001]; // 0xf1
    lut[k][0b11110010] = lut[k][0b10000000] ^ lut[k][0b01110010]; // 0xf2
    lut[k][0b11110011] = lut[k][0b10000000] ^ lut[k][0b01110011]; // 0xf3
    lut[k][0b11110100] = lut[k][0b10000000] ^ lut[k][0b01110100]; // 0xf4
    lut[k][0b11110101] = lut[k][0b10000000] ^ lut[k][0b01110101]; // 0xf5
    lut[k][0b11110110] = lut[k][0b10000000] ^ lut[k][0b01110110]; // 0xf6
    lut[k][0b11110111] = lut[k][0b10000000] ^ lut[k][0b01110111]; // 0xf7
    lut[k][0b11111000] = lut[k][0b10000000] ^ lut[k][0b01111000]; // 0xf8
    lut[k][0b11111001] = lut[k][0b10000000] ^ lut[k][0b01111001]; // 0xf9
    lut[k][0b11111010] = lut[k][0b10000000] ^ lut[k][0b01111010]; // 0xfa
    lut[k][0b11111011] = lut[k][0b10000000] ^ lut[k][0b01111011]; // 0xfb
    lut[k][0b11111100] = lut[k][0b10000000] ^ lut[k][0b01111100]; // 0xfc
    lut[k][0b11111101] = lut[k][0b10000000] ^ lut[k][0b01111101]; // 0xfd
    lut[k][0b11111110] = lut[k][0b10000000] ^ lut[k][0b01111110]; // 0xfe
    lut[k][0b11111111] = lut[k][0b10000000] ^ lut[k][0b01111111]; // 0xff
    }
}



// template<typename T = __m128i>
// std::array<T, blocklen> mmul256(const uint64_t * matrix1, const std::array<T, blocklen> & matrix2, const block<__m128i> & initial_value)
// {
//     std::array<T, blocklen> answer;

//     for (int i = 0; i < blocklen; ++i) answer[i] = _mm_set1_epi8(initial_value.bits[i] ? 0xff : 0);
 
//     T lut[8][256];

//     for(int i = 0; i < sizeof(T)/8; ++i)
//     {
//       populate_lut(i, matrix2, lut);

//       for(int j = 0; j < blocklen; ++j)
//        {
//             uint64_t tmp_ = matrix1[i + (sizeof(T)/8) * j];
//             // std::bitset<64> tmp(matrix1[i + (2 * j)]);
        
//             for(size_t k = 0; k < 8; ++k)
//             {
//                  answer[j] ^= lut[k][tmp_ & 0xff];  
//                  tmp_ >>= 8;
//             }

//         }
//     }

//     return std::move(answer);
// }
